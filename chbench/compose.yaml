services:
  materialized:
    image: materialize/materialized:v0.26.0
    ports:
      - 6875:6875
    healthcheck: {test: curl -f localhost:6875, interval: 1s, start_period: 30s}

  mysql:
    image: mysql/mysql-server:8.0.27
    init: true
    ports:
      - 3306:3306
    environment:
      - MYSQL_ROOT_HOST=%
      - MYSQL_ROOT_PASSWORD=rootpw
      - MYSQL_USER=mysqluser
      - MYSQL_PASSWORD=mysqlpw
    volumes:
      - chbench-gen:/var/lib/mysql-files
      - ${PWD}/mysql/mysql.cnf:/etc/mysql/conf.d
      - ${PWD}/mysql/mysql_bootstrap.sql:/docker-entrypoint-initdb.d/mysql_bootstrap.sql
    healthcheck: {test: mysql -prootpw -e 'select 1', interval: 1s, start_period: 60s}

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
    healthcheck: {test: nc -z localhost 2181, interval: 1s, start_period: 120s}

  kafka:
    image: confluentinc/cp-enterprise-kafka:7.0.1
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1
      - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
    ports:
      - 9092:9092
    depends_on:
      zookeeper: {condition: service_healthy}
    healthcheck: {test: nc -z localhost 9092, interval: 1s, start_period: 120s}

  schema-registry:
    image: confluentinc/cp-schema-registry:7.0.1
    init: true
    environment:
      - SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS=kafka:9092
      - SCHEMA_REGISTRY_HOST_NAME=schema-registry
      - SCHEMA_REGISTRY_LISTENERS=http://schema-registry:8081,http://localhost:8081
    ports:
      - 8081:8081
    depends_on:
      zookeeper: {condition: service_healthy}
      kafka: {condition: service_healthy}
    healthcheck: {test: curl -f localhost:8081, interval: 1s, start_period: 120s}

  debezium:
    image: debezium/connect:1.8
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=connect_configs
      - OFFSET_STORAGE_TOPIC=connect_offsets
      - KEY_CONVERTER=io.confluent.connect.avro.AvroConverter
      - VALUE_CONVERTER=io.confluent.connect.avro.AvroConverter
      - CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL=http://schema-registry:8081
      - CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL=http://schema-registry:8081
    ports:
      - 8083:8083
    healthcheck: {test: curl -f localhost:8083, interval: 1s, start_period: 120s}
    depends_on:
      kafka: {condition: service_healthy}
      schema-registry: {condition: service_healthy}

  debezium_deploy:
    image: debezium/connect:1.8
    depends_on:
      debezium: {condition: service_healthy}
    volumes:
      - ${PWD}/mysql/mysql-connector.sh:/mysql-connector.sh
    entrypoint: [bash, -c, /mysql-connector.sh]

  chbench_gen:
    init: true
    image: materialize/chbenchmark:v0.26.0
    command:
      - gen
      - --config-file-path=/etc/chbenchmark/mz-default-mysql.cfg
      - --warehouses=1
    depends_on:
      mysql: {condition: service_healthy}
    volumes: [chbench-gen:/gen]

  chbench_run:
    init: true
    image: materialize/chbenchmark:v0.26.0
    command:
      - run
      - --config-file-path=/etc/chbenchmark/mz-default-mysql.cfg
      - --dsn=mysql
      - --gen-dir=/var/lib/mysql-files
      - --analytic-threads=0
      - --transactional-threads=1
      - --run-seconds=86400
      - --mz-sources
    depends_on:
      debezium_deploy: {condition: service_completed_successfully}
      debezium: {condition: service_healthy}
      mysql: {condition: service_healthy}
    volumes: [chbench-gen:/gen]

  cli:
    image: materialize/cli:v0.26.0

  metabase:
    image: metabase/metabase:v0.41.5
    depends_on: [materialized]
    ports:
      - 3030:3000

volumes:
  chbench-gen:
