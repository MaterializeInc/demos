services:
  postgres:
    container_name: postgres
    build:
      context: ./postgres
    init: true
    ports:
      - 5432:5432
    restart: always
    environment:
      POSTGRES_PASSWORD: pg_password
      POSTGRES_HOST: ${POSTGRES_HOST:-postgres}
    command:
      - postgres
      - -c
      - wal_level=logical
  helper:
    container_name: helper
    build:
      context: ./helper
    environment:
      AUTOSETUP: ${AUTOSETUP}
      MZ_HOST: ${MZ_HOST:-materialized}
      MZ_PORT: ${MZ_PORT:-6875}
      MZ_USER: ${MZ_USER:-materialize}
      MZ_PASSWORD: ${MZ_PASSWORD:-materialize}
      MZ_DATABASE: ${MZ_DATABASE:-materialize}
      POSTGRES_PASSWORD: pg_password
      POSTGRES_HOST: ${POSTGRES_HOST:-postgres}
    init: true
  backend:
    container_name: backend
    build:
      context: ./backend
    init: true
    environment:
      MZ_HOST: ${MZ_HOST:-materialized}
      MZ_PORT: ${MZ_PORT:-6875}
      MZ_USER: ${MZ_USER:-materialize}
      MZ_PASSWORD: ${MZ_PASSWORD:-materialize}
      MZ_DATABASE: ${MZ_DATABASE:-materialize}
      POSTGRES_PASSWORD: pg_password
      POSTGRES_HOST: ${POSTGRES_HOST:-postgres}
    ports:
      - 4000:4000
    depends_on:
      - postgres
      - helper
  frontend:
    container_name: frontend
    build:
      context: ./frontend
    init: true
    ports:
      - 3000:3000
    depends_on:
      - backend
  microservice:
    container_name: microservice
    build:
      context: ./microservice
    environment:
      MZ_HOST: ${MZ_HOST:-materialized}
      MZ_PORT: ${MZ_PORT:-6875}
      MZ_USER: ${MZ_USER:-materialize}
      MZ_PASSWORD: ${MZ_PASSWORD:-materialize}
      MZ_DATABASE: ${MZ_DATABASE:-materialize}
      POSTGRES_PASSWORD: pg_password
      POSTGRES_HOST: ${POSTGRES_HOST:-postgres}
    init: true
    depends_on:
      - backend
